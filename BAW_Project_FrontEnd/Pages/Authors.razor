@page "/authors"
@attribute [Authorize(Roles = "Admin")]
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation

<h3>
    Authors List
    <AuthorizeView Roles="Admin">
        <Authorized>
            <button class="btn btn-primary ms-3" @onclick="AddAuthor">Add Author</button>
        </Authorized>
    </AuthorizeView>
</h3>

@if (authors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <AuthorizeView Roles="Admin">
                            <Authorized>
                                <button class="btn btn-info" @onclick="() => EditAuthor(author.Id.Value)">Edit</button>
                            </Authorized>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorDto> authors;

    protected override async Task OnInitializedAsync()
    {
        authors = await Http.GetFromJsonAsync<List<AuthorDto>>("https://localhost:7131/api/Author");
    }

    private void EditAuthor(int authorId)
    {
        Navigation.NavigateTo($"/edit-author/{authorId}");
    }

    private void AddAuthor()
    {
        Navigation.NavigateTo("/add-author");
    }
}
